--FILE input4.c
size_t = size_t;
__gnuc_va_list = __gnuc_va_list;
__u_char = __u_char;
__u_short = __u_short;
__u_int = __u_int;
__u_long = __u_long;
__int8_t = __int8_t;
__uint8_t = __uint8_t;
__int16_t = __int16_t;
__uint16_t = __uint16_t;
__int32_t = __int32_t;
__uint32_t = __uint32_t;
__int64_t = __int64_t;
__uint64_t = __uint64_t;
__int_least8_t = __int_least8_t;
__uint_least8_t = __uint_least8_t;
__int_least16_t = __int_least16_t;
__uint_least16_t = __uint_least16_t;
__int_least32_t = __int_least32_t;
__uint_least32_t = __uint_least32_t;
__int_least64_t = __int_least64_t;
__uint_least64_t = __uint_least64_t;
__quad_t = __quad_t;
__u_quad_t = __u_quad_t;
__intmax_t = __intmax_t;
__uintmax_t = __uintmax_t;
__dev_t = __dev_t;
__uid_t = __uid_t;
__gid_t = __gid_t;
__ino_t = __ino_t;
__ino64_t = __ino64_t;
__mode_t = __mode_t;
__nlink_t = __nlink_t;
__off_t = __off_t;
__off64_t = __off64_t;
__pid_t = __pid_t;
__fsid_t = __fsid_t;
__clock_t = __clock_t;
__rlim_t = __rlim_t;
__rlim64_t = __rlim64_t;
__id_t = __id_t;
__time_t = __time_t;
__useconds_t = __useconds_t;
__suseconds_t = __suseconds_t;
__suseconds64_t = __suseconds64_t;
__daddr_t = __daddr_t;
__key_t = __key_t;
__clockid_t = __clockid_t;
__timer_t = __timer_t;
__blksize_t = __blksize_t;
__blkcnt_t = __blkcnt_t;
__blkcnt64_t = __blkcnt64_t;
__fsblkcnt_t = __fsblkcnt_t;
__fsblkcnt64_t = __fsblkcnt64_t;
__fsfilcnt_t = __fsfilcnt_t;
__fsfilcnt64_t = __fsfilcnt64_t;
__fsword_t = __fsword_t;
__ssize_t = __ssize_t;
__syscall_slong_t = __syscall_slong_t;
__syscall_ulong_t = __syscall_ulong_t;
__loff_t = __loff_t;
__caddr_t = __caddr_t;
__intptr_t = __intptr_t;
__socklen_t = __socklen_t;
__sig_atomic_t = __sig_atomic_t;
__mbstate_t = __mbstate_t;
__fpos_t = __fpos_t;
__fpos64_t = __fpos64_t;
--[[ Declaration { specifiers: [Node { node: TypeSpecifier(Node { node: Struct(Node { node: StructType { kind: Node { node: Struct, span: 5938…5944 }, identifier: Some(Node { node: Identifier { name: "_IO_FILE" }, span: 5945…5953 }), declarations: None }, span: 5938…5953 }), span: 5938…5953 }), span: 5938…5953 }], declarators: [] }]]
__FILE = __FILE;
--[[ Declaration { specifiers: [Node { node: TypeSpecifier(Node { node: Struct(Node { node: StructType { kind: Node { node: Struct, span: 6084…6090 }, identifier: Some(Node { node: Identifier { name: "_IO_FILE" }, span: 6091…6099 }), declarations: None }, span: 6084…6099 }), span: 6084…6099 }), span: 6084…6099 }], declarators: [] }]]
FILE = FILE;
--[[ Declaration { specifiers: [Node { node: TypeSpecifier(Node { node: Struct(Node { node: StructType { kind: Node { node: Struct, span: 6300…6306 }, identifier: Some(Node { node: Identifier { name: "_IO_FILE" }, span: 6307…6315 }), declarations: None }, span: 6300…6315 }), span: 6300…6315 }), span: 6300…6315 }], declarators: [] }]]
--[[ Declaration { specifiers: [Node { node: TypeSpecifier(Node { node: Struct(Node { node: StructType { kind: Node { node: Struct, span: 6317…6323 }, identifier: Some(Node { node: Identifier { name: "_IO_marker" }, span: 6324…6334 }), declarations: None }, span: 6317…6334 }), span: 6317…6334 }), span: 6317…6334 }], declarators: [] }]]
--[[ Declaration { specifiers: [Node { node: TypeSpecifier(Node { node: Struct(Node { node: StructType { kind: Node { node: Struct, span: 6336…6342 }, identifier: Some(Node { node: Identifier { name: "_IO_codecvt" }, span: 6343…6354 }), declarations: None }, span: 6336…6354 }), span: 6336…6354 }), span: 6336…6354 }], declarators: [] }]]
--[[ Declaration { specifiers: [Node { node: TypeSpecifier(Node { node: Struct(Node { node: StructType { kind: Node { node: Struct, span: 6356…6362 }, identifier: Some(Node { node: Identifier { name: "_IO_wide_data" }, span: 6363…6376 }), declarations: None }, span: 6356…6376 }), span: 6356…6376 }), span: 6356…6376 }], declarators: [] }]]
_IO_lock_t = _IO_lock_t;
--[[ Declaration { specifiers: [Node { node: TypeSpecifier(Node { node: Struct(Node { node: StructType { kind: Node { node: Struct, span: 6412…6418 }, identifier: Some(Node { node: Identifier { name: "_IO_FILE" }, span: 6419…6427 }), declarations: Some([Node { node: Field(Node { node: StructField { specifiers: [Node { node: TypeSpecifier(Node { node: Int, span: 6432…6435 }), span: 6432…6435 }], declarators: [Node { node: StructDeclarator { declarator: Some(Node { node: Declarator { kind: Node { node: Identifier(Node { node: Identifier { name: "_flags" }, span: 6436…6442 }), span: 6436…6442 }, derived: [], extensions: [] }, span: 6436…6442 }), bit_width: None }, span: 6436…6442 }] }, span: 6432…6443 }), span: 6432…6443 }, Node { node: Field(Node { node: StructField { specifiers: [Node { node: TypeSpecifier(Node { node: Char, span: 6448…6452 }), span: 6448…6452 }], declarators: [Node { node: StructDeclarator { declarator: Some(Node { node: Declarator { kind: Node { node: Identifier(Node { node: Identifier { name: "_IO_read_ptr" }, span: 6454…6466 }), span: 6454…6466 }, derived: [Node { node: Pointer([]), span: 6453…6454 }], extensions: [] }, span: 6453…6466 }), bit_width: None }, span: 6453…6466 }] }, span: 6448…6467 }), span: 6448…6467 }, Node { node: Field(Node { node: StructField { specifiers: [Node { node: TypeSpecifier(Node { node: Char, span: 6470…6474 }), span: 6470…6474 }], declarators: [Node { node: StructDeclarator { declarator: Some(Node { node: Declarator { kind: Node { node: Identifier(Node { node: Identifier { name: "_IO_read_end" }, span: 6476…6488 }), span: 6476…6488 }, derived: [Node { node: Pointer([]), span: 6475…6476 }], extensions: [] }, span: 6475…6488 }), bit_width: None }, span: 6475…6488 }] }, span: 6470…6489 }), span: 6470…6489 }, Node { node: Field(Node { node: StructField { specifiers: [Node { node: TypeSpecifier(Node { node: Char, span: 6492…6496 }), span: 6492…6496 }], declarators: [Node { node: StructDeclarator { declarator: Some(Node { node: Declarator { kind: Node { node: Identifier(Node { node: Identifier { name: "_IO_read_base" }, span: 6498…6511 }), span: 6498…6511 }, derived: [Node { node: Pointer([]), span: 6497…6498 }], extensions: [] }, span: 6497…6511 }), bit_width: None }, span: 6497…6511 }] }, span: 6492…6512 }), span: 6492…6512 }, Node { node: Field(Node { node: StructField { specifiers: [Node { node: TypeSpecifier(Node { node: Char, span: 6515…6519 }), span: 6515…6519 }], declarators: [Node { node: StructDeclarator { declarator: Some(Node { node: Declarator { kind: Node { node: Identifier(Node { node: Identifier { name: "_IO_write_base" }, span: 6521…6535 }), span: 6521…6535 }, derived: [Node { node: Pointer([]), span: 6520…6521 }], extensions: [] }, span: 6520…6535 }), bit_width: None }, span: 6520…6535 }] }, span: 6515…6536 }), span: 6515…6536 }, Node { node: Field(Node { node: StructField { specifiers: [Node { node: TypeSpecifier(Node { node: Char, span: 6539…6543 }), span: 6539…6543 }], declarators: [Node { node: StructDeclarator { declarator: Some(Node { node: Declarator { kind: Node { node: Identifier(Node { node: Identifier { name: "_IO_write_ptr" }, span: 6545…6558 }), span: 6545…6558 }, derived: [Node { node: Pointer([]), span: 6544…6545 }], extensions: [] }, span: 6544…6558 }), bit_width: None }, span: 6544…6558 }] }, span: 6539…6559 }), span: 6539…6559 }, Node { node: Field(Node { node: StructField { specifiers: [Node { node: TypeSpecifier(Node { node: Char, span: 6562…6566 }), span: 6562…6566 }], declarators: [Node { node: StructDeclarator { declarator: Some(Node { node: Declarator { kind: Node { node: Identifier(Node { node: Identifier { name: "_IO_write_end" }, span: 6568…6581 }), span: 6568…6581 }, derived: [Node { node: Pointer([]), span: 6567…6568 }], extensions: [] }, span: 6567…6581 }), bit_width: None }, span: 6567…6581 }] }, span: 6562…6582 }), span: 6562…6582 }, Node { node: Field(Node { node: StructField { specifiers: [Node { node: TypeSpecifier(Node { node: Char, span: 6585…6589 }), span: 6585…6589 }], declarators: [Node { node: StructDeclarator { declarator: Some(Node { node: Declarator { kind: Node { node: Identifier(Node { node: Identifier { name: "_IO_buf_base" }, span: 6591…6603 }), span: 6591…6603 }, derived: [Node { node: Pointer([]), span: 6590…6591 }], extensions: [] }, span: 6590…6603 }), bit_width: None }, span: 6590…6603 }] }, span: 6585…6604 }), span: 6585…6604 }, Node { node: Field(Node { node: StructField { specifiers: [Node { node: TypeSpecifier(Node { node: Char, span: 6607…6611 }), span: 6607…6611 }], declarators: [Node { node: StructDeclarator { declarator: Some(Node { node: Declarator { kind: Node { node: Identifier(Node { node: Identifier { name: "_IO_buf_end" }, span: 6613…6624 }), span: 6613…6624 }, derived: [Node { node: Pointer([]), span: 6612…6613 }], extensions: [] }, span: 6612…6624 }), bit_width: None }, span: 6612…6624 }] }, span: 6607…6625 }), span: 6607…6625 }, Node { node: Field(Node { node: StructField { specifiers: [Node { node: TypeSpecifier(Node { node: Char, span: 6630…6634 }), span: 6630…6634 }], declarators: [Node { node: StructDeclarator { declarator: Some(Node { node: Declarator { kind: Node { node: Identifier(Node { node: Identifier { name: "_IO_save_base" }, span: 6636…6649 }), span: 6636…6649 }, derived: [Node { node: Pointer([]), span: 6635…6636 }], extensions: [] }, span: 6635…6649 }), bit_width: None }, span: 6635…6649 }] }, span: 6630…6650 }), span: 6630…6650 }, Node { node: Field(Node { node: StructField { specifiers: [Node { node: TypeSpecifier(Node { node: Char, span: 6653…6657 }), span: 6653…6657 }], declarators: [Node { node: StructDeclarator { declarator: Some(Node { node: Declarator { kind: Node { node: Identifier(Node { node: Identifier { name: "_IO_backup_base" }, span: 6659…6674 }), span: 6659…6674 }, derived: [Node { node: Pointer([]), span: 6658…6659 }], extensions: [] }, span: 6658…6674 }), bit_width: None }, span: 6658…6674 }] }, span: 6653…6675 }), span: 6653…6675 }, Node { node: Field(Node { node: StructField { specifiers: [Node { node: TypeSpecifier(Node { node: Char, span: 6678…6682 }), span: 6678…6682 }], declarators: [Node { node: StructDeclarator { declarator: Some(Node { node: Declarator { kind: Node { node: Identifier(Node { node: Identifier { name: "_IO_save_end" }, span: 6684…6696 }), span: 6684…6696 }, derived: [Node { node: Pointer([]), span: 6683…6684 }], extensions: [] }, span: 6683…6696 }), bit_width: None }, span: 6683…6696 }] }, span: 6678…6697 }), span: 6678…6697 }, Node { node: Field(Node { node: StructField { specifiers: [Node { node: TypeSpecifier(Node { node: Struct(Node { node: StructType { kind: Node { node: Struct, span: 6701…6707 }, identifier: Some(Node { node: Identifier { name: "_IO_marker" }, span: 6708…6718 }), declarations: None }, span: 6701…6719 }), span: 6701…6719 }), span: 6701…6719 }], declarators: [Node { node: StructDeclarator { declarator: Some(Node { node: Declarator { kind: Node { node: Identifier(Node { node: Identifier { name: "_markers" }, span: 6720…6728 }), span: 6720…6728 }, derived: [Node { node: Pointer([]), span: 6719…6720 }], extensions: [] }, span: 6719…6728 }), bit_width: None }, span: 6719…6728 }] }, span: 6701…6729 }), span: 6701…6729 }, Node { node: Field(Node { node: StructField { specifiers: [Node { node: TypeSpecifier(Node { node: Struct(Node { node: StructType { kind: Node { node: Struct, span: 6733…6739 }, identifier: Some(Node { node: Identifier { name: "_IO_FILE" }, span: 6740…6748 }), declarations: None }, span: 6733…6749 }), span: 6733…6749 }), span: 6733…6749 }], declarators: [Node { node: StructDeclarator { declarator: Some(Node { node: Declarator { kind: Node { node: Identifier(Node { node: Identifier { name: "_chain" }, span: 6750…6756 }), span: 6750…6756 }, derived: [Node { node: Pointer([]), span: 6749…6750 }], extensions: [] }, span: 6749…6756 }), bit_width: None }, span: 6749…6756 }] }, span: 6733…6757 }), span: 6733…6757 }, Node { node: Field(Node { node: StructField { specifiers: [Node { node: TypeSpecifier(Node { node: Int, span: 6761…6764 }), span: 6761…6764 }], declarators: [Node { node: StructDeclarator { declarator: Some(Node { node: Declarator { kind: Node { node: Identifier(Node { node: Identifier { name: "_fileno" }, span: 6765…6772 }), span: 6765…6772 }, derived: [], extensions: [] }, span: 6765…6772 }), bit_width: None }, span: 6765…6772 }] }, span: 6761…6773 }), span: 6761…6773 }, Node { node: Field(Node { node: StructField { specifiers: [Node { node: TypeSpecifier(Node { node: Int, span: 6776…6779 }), span: 6776…6779 }], declarators: [Node { node: StructDeclarator { declarator: Some(Node { node: Declarator { kind: Node { node: Identifier(Node { node: Identifier { name: "_flags2" }, span: 6780…6787 }), span: 6780…6787 }, derived: [], extensions: [] }, span: 6780…6787 }), bit_width: None }, span: 6780…6787 }] }, span: 6776…6788 }), span: 6776…6788 }, Node { node: Field(Node { node: StructField { specifiers: [Node { node: TypeSpecifier(Node { node: TypedefName(Node { node: Identifier { name: "__off_t" }, span: 6791…6798 }), span: 6791…6798 }), span: 6791…6798 }], declarators: [Node { node: StructDeclarator { declarator: Some(Node { node: Declarator { kind: Node { node: Identifier(Node { node: Identifier { name: "_old_offset" }, span: 6799…6810 }), span: 6799…6810 }, derived: [], extensions: [] }, span: 6799…6810 }), bit_width: None }, span: 6799…6810 }] }, span: 6791…6811 }), span: 6791…6811 }, Node { node: Field(Node { node: StructField { specifiers: [Node { node: TypeSpecifier(Node { node: Unsigned, span: 6816…6824 }), span: 6816…6824 }, Node { node: TypeSpecifier(Node { node: Short, span: 6825…6830 }), span: 6825…6830 }], declarators: [Node { node: StructDeclarator { declarator: Some(Node { node: Declarator { kind: Node { node: Identifier(Node { node: Identifier { name: "_cur_column" }, span: 6831…6842 }), span: 6831…6842 }, derived: [], extensions: [] }, span: 6831…6842 }), bit_width: None }, span: 6831…6842 }] }, span: 6816…6843 }), span: 6816…6843 }, Node { node: Field(Node { node: StructField { specifiers: [Node { node: TypeSpecifier(Node { node: Signed, span: 6846…6852 }), span: 6846…6852 }, Node { node: TypeSpecifier(Node { node: Char, span: 6853…6857 }), span: 6853…6857 }], declarators: [Node { node: StructDeclarator { declarator: Some(Node { node: Declarator { kind: Node { node: Identifier(Node { node: Identifier { name: "_vtable_offset" }, span: 6858…6872 }), span: 6858…6872 }, derived: [], extensions: [] }, span: 6858…6872 }), bit_width: None }, span: 6858…6872 }] }, span: 6846…6873 }), span: 6846…6873 }, Node { node: Field(Node { node: StructField { specifiers: [Node { node: TypeSpecifier(Node { node: Char, span: 6876…6880 }), span: 6876…6880 }], declarators: [Node { node: StructDeclarator { declarator: Some(Node { node: Declarator { kind: Node { node: Identifier(Node { node: Identifier { name: "_shortbuf" }, span: 6881…6890 }), span: 6881…6890 }, derived: [Node { node: Array(Node { node: ArrayDeclarator { qualifiers: [], size: VariableExpression(Node { node: Constant(Node { node: Integer(Integer { base: Decimal, number: "1", suffix: IntegerSuffix { size: Int, unsigned: false, imaginary: false } }), span: 6891…6892 }), span: 6891…6892 }) }, span: 6891…6893 }), span: 6890…6893 }], extensions: [] }, span: 6881…6893 }), bit_width: None }, span: 6881…6893 }] }, span: 6876…6894 }), span: 6876…6894 }, Node { node: Field(Node { node: StructField { specifiers: [Node { node: TypeSpecifier(Node { node: TypedefName(Node { node: Identifier { name: "_IO_lock_t" }, span: 6898…6908 }), span: 6898…6908 }), span: 6898…6908 }], declarators: [Node { node: StructDeclarator { declarator: Some(Node { node: Declarator { kind: Node { node: Identifier(Node { node: Identifier { name: "_lock" }, span: 6910…6915 }), span: 6910…6915 }, derived: [Node { node: Pointer([]), span: 6909…6910 }], extensions: [] }, span: 6909…6915 }), bit_width: None }, span: 6909…6915 }] }, span: 6898…6916 }), span: 6898…6916 }, Node { node: Field(Node { node: StructField { specifiers: [Node { node: TypeSpecifier(Node { node: TypedefName(Node { node: Identifier { name: "__off64_t" }, span: 6926…6935 }), span: 6926…6935 }), span: 6926…6935 }], declarators: [Node { node: StructDeclarator { declarator: Some(Node { node: Declarator { kind: Node { node: Identifier(Node { node: Identifier { name: "_offset" }, span: 6936…6943 }), span: 6936…6943 }, derived: [], extensions: [] }, span: 6936…6943 }), bit_width: None }, span: 6936…6943 }] }, span: 6926…6944 }), span: 6926…6944 }, Node { node: Field(Node { node: StructField { specifiers: [Node { node: TypeSpecifier(Node { node: Struct(Node { node: StructType { kind: Node { node: Struct, span: 6948…6954 }, identifier: Some(Node { node: Identifier { name: "_IO_codecvt" }, span: 6955…6966 }), declarations: None }, span: 6948…6967 }), span: 6948…6967 }), span: 6948…6967 }], declarators: [Node { node: StructDeclarator { declarator: Some(Node { node: Declarator { kind: Node { node: Identifier(Node { node: Identifier { name: "_codecvt" }, span: 6968…6976 }), span: 6968…6976 }, derived: [Node { node: Pointer([]), span: 6967…6968 }], extensions: [] }, span: 6967…6976 }), bit_width: None }, span: 6967…6976 }] }, span: 6948…6977 }), span: 6948…6977 }, Node { node: Field(Node { node: StructField { specifiers: [Node { node: TypeSpecifier(Node { node: Struct(Node { node: StructType { kind: Node { node: Struct, span: 6980…6986 }, identifier: Some(Node { node: Identifier { name: "_IO_wide_data" }, span: 6987…7000 }), declarations: None }, span: 6980…7001 }), span: 6980…7001 }), span: 6980…7001 }], declarators: [Node { node: StructDeclarator { declarator: Some(Node { node: Declarator { kind: Node { node: Identifier(Node { node: Identifier { name: "_wide_data" }, span: 7002…7012 }), span: 7002…7012 }, derived: [Node { node: Pointer([]), span: 7001…7002 }], extensions: [] }, span: 7001…7012 }), bit_width: None }, span: 7001…7012 }] }, span: 6980…7013 }), span: 6980…7013 }, Node { node: Field(Node { node: StructField { specifiers: [Node { node: TypeSpecifier(Node { node: Struct(Node { node: StructType { kind: Node { node: Struct, span: 7016…7022 }, identifier: Some(Node { node: Identifier { name: "_IO_FILE" }, span: 7023…7031 }), declarations: None }, span: 7016…7032 }), span: 7016…7032 }), span: 7016…7032 }], declarators: [Node { node: StructDeclarator { declarator: Some(Node { node: Declarator { kind: Node { node: Identifier(Node { node: Identifier { name: "_freeres_list" }, span: 7033…7046 }), span: 7033…7046 }, derived: [Node { node: Pointer([]), span: 7032…7033 }], extensions: [] }, span: 7032…7046 }), bit_width: None }, span: 7032…7046 }] }, span: 7016…7047 }), span: 7016…7047 }, Node { node: Field(Node { node: StructField { specifiers: [Node { node: TypeSpecifier(Node { node: Void, span: 7050…7054 }), span: 7050…7054 }], declarators: [Node { node: StructDeclarator { declarator: Some(Node { node: Declarator { kind: Node { node: Identifier(Node { node: Identifier { name: "_freeres_buf" }, span: 7056…7068 }), span: 7056…7068 }, derived: [Node { node: Pointer([]), span: 7055…7056 }], extensions: [] }, span: 7055…7068 }), bit_width: None }, span: 7055…7068 }] }, span: 7050…7069 }), span: 7050…7069 }, Node { node: Field(Node { node: StructField { specifiers: [Node { node: TypeSpecifier(Node { node: TypedefName(Node { node: Identifier { name: "size_t" }, span: 7072…7078 }), span: 7072…7078 }), span: 7072…7078 }], declarators: [Node { node: StructDeclarator { declarator: Some(Node { node: Declarator { kind: Node { node: Identifier(Node { node: Identifier { name: "__pad5" }, span: 7079…7085 }), span: 7079…7085 }, derived: [], extensions: [] }, span: 7079…7085 }), bit_width: None }, span: 7079…7085 }] }, span: 7072…7086 }), span: 7072…7086 }, Node { node: Field(Node { node: StructField { specifiers: [Node { node: TypeSpecifier(Node { node: Int, span: 7089…7092 }), span: 7089…7092 }], declarators: [Node { node: StructDeclarator { declarator: Some(Node { node: Declarator { kind: Node { node: Identifier(Node { node: Identifier { name: "_mode" }, span: 7093…7098 }), span: 7093…7098 }, derived: [], extensions: [] }, span: 7093…7098 }), bit_width: None }, span: 7093…7098 }] }, span: 7089…7099 }), span: 7089…7099 }, Node { node: Field(Node { node: StructField { specifiers: [Node { node: TypeSpecifier(Node { node: Char, span: 7103…7107 }), span: 7103…7107 }], declarators: [Node { node: StructDeclarator { declarator: Some(Node { node: Declarator { kind: Node { node: Identifier(Node { node: Identifier { name: "_unused2" }, span: 7108…7116 }), span: 7108…7116 }, derived: [Node { node: Array(Node { node: ArrayDeclarator { qualifiers: [], size: VariableExpression(Node { node: BinaryOperator(Node { node: BinaryOperatorExpression { operator: Node { node: Minus, span: 7157…7158 }, lhs: Node { node: BinaryOperator(Node { node: BinaryOperatorExpression { operator: Node { node: Minus, span: 7135…7136 }, lhs: Node { node: BinaryOperator(Node { node: BinaryOperatorExpression { operator: Node { node: Multiply, span: 7120…7121 }, lhs: Node { node: Constant(Node { node: Integer(Integer { base: Decimal, number: "15", suffix: IntegerSuffix { size: Int, unsigned: false, imaginary: false } }), span: 7117…7119 }), span: 7117…7120 }, rhs: Node { node: SizeOfTy(Node { node: SizeOfTy(Node { node: TypeName { specifiers: [Node { node: TypeSpecifier(Node { node: Int, span: 7130…7133 }), span: 7130…7133 }], declarator: None }, span: 7130…7133 }), span: 7122…7134 }), span: 7122…7134 } }, span: 7117…7134 }), span: 7117…7134 }, rhs: Node { node: BinaryOperator(Node { node: BinaryOperatorExpression { operator: Node { node: Multiply, span: 7139…7140 }, lhs: Node { node: Constant(Node { node: Integer(Integer { base: Decimal, number: "4", suffix: IntegerSuffix { size: Int, unsigned: false, imaginary: false } }), span: 7137…7138 }), span: 7137…7139 }, rhs: Node { node: SizeOfTy(Node { node: SizeOfTy(Node { node: TypeName { specifiers: [Node { node: TypeSpecifier(Node { node: Void, span: 7149…7153 }), span: 7149…7153 }], declarator: Some(Node { node: Declarator { kind: Node { node: Abstract, span: 7155…7155 }, derived: [Node { node: Pointer([]), span: 7154…7155 }], extensions: [] }, span: 7154…7155 }) }, span: 7149…7155 }), span: 7141…7156 }), span: 7141…7156 } }, span: 7137…7156 }), span: 7137…7156 } }, span: 7117…7156 }), span: 7117…7156 }, rhs: Node { node: SizeOfTy(Node { node: SizeOfTy(Node { node: TypeName { specifiers: [Node { node: TypeSpecifier(Node { node: TypedefName(Node { node: Identifier { name: "size_t" }, span: 7167…7173 }), span: 7167…7173 }), span: 7167…7173 }], declarator: None }, span: 7167…7173 }), span: 7159…7174 }), span: 7159…7174 } }, span: 7117…7174 }), span: 7117…7174 }) }, span: 7117…7175 }), span: 7116…7175 }], extensions: [] }, span: 7108…7175 }), bit_width: None }, span: 7108…7175 }] }, span: 7103…7176 }), span: 7103…7176 }]) }, span: 6412…7178 }), span: 6412…7178 }), span: 6412…7178 }], declarators: [] }]]
va_list = va_list;
off_t = off_t;
ssize_t = ssize_t;
fpos_t = fpos_t;
stdin = stdin;
stdout = stdout;
stderr = stderr;
remove = remove;
rename = rename;
renameat = renameat;
fclose = fclose;
tmpfile = tmpfile;
tmpnam = tmpnam;
tmpnam_r = tmpnam_r;
tempnam = tempnam;
fflush = fflush;
fflush_unlocked = fflush_unlocked;
fopen = fopen;
freopen = freopen;
fdopen = fdopen;
fmemopen = fmemopen;
open_memstream = open_memstream;
setbuf = setbuf;
setvbuf = setvbuf;
setbuffer = setbuffer;
setlinebuf = setlinebuf;
fprintf = fprintf;
printf = printf;
sprintf = sprintf;
vfprintf = vfprintf;
vprintf = vprintf;
vsprintf = vsprintf;
snprintf = snprintf;
vsnprintf = vsnprintf;
vdprintf = vdprintf;
dprintf = dprintf;
fscanf = fscanf;
scanf = scanf;
sscanf = sscanf;
fscanf = fscanf;
scanf = scanf;
sscanf = sscanf;
vfscanf = vfscanf;
vscanf = vscanf;
vsscanf = vsscanf;
vfscanf = vfscanf;
vscanf = vscanf;
vsscanf = vsscanf;
fgetc = fgetc;
getc = getc;
getchar = getchar;
getc_unlocked = getc_unlocked;
getchar_unlocked = getchar_unlocked;
fgetc_unlocked = fgetc_unlocked;
fputc = fputc;
putc = putc;
putchar = putchar;
fputc_unlocked = fputc_unlocked;
putc_unlocked = putc_unlocked;
putchar_unlocked = putchar_unlocked;
getw = getw;
putw = putw;
fgets = fgets;
__getdelim = __getdelim;
getdelim = getdelim;
getline = getline;
fputs = fputs;
puts = puts;
ungetc = ungetc;
fread = fread;
fwrite = fwrite;
fread_unlocked = fread_unlocked;
fwrite_unlocked = fwrite_unlocked;
fseek = fseek;
ftell = ftell;
rewind = rewind;
fseeko = fseeko;
ftello = ftello;
fgetpos = fgetpos;
fsetpos = fsetpos;
clearerr = clearerr;
feof = feof;
ferror = ferror;
clearerr_unlocked = clearerr_unlocked;
feof_unlocked = feof_unlocked;
ferror_unlocked = ferror_unlocked;
perror = perror;
fileno = fileno;
fileno_unlocked = fileno_unlocked;
pclose = pclose;
popen = popen;
ctermid = ctermid;
flockfile = flockfile;
ftrylockfile = ftrylockfile;
funlockfile = funlockfile;
__uflow = __uflow;
__overflow = __overflow;
function main(argc: integer, argv: Ptr<Ptr<Char>>): integer
   -- start for loop
   local i = ____C.Cst(0);
   while (i < argc) do
      printf(____C.Str("%s "), argv[i]);
      (function()local _=i;____C.Set(i,i + 1);return _ end)()
      ::continue::
   end;
   return (____C.Cst(0));
end
